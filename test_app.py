"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
"""
import json
from datetime import datetime
from database import SitesDatabase
from site_monitor import SiteMonitor

def test_database():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ë–î
    db = SitesDatabase("test_sites.json")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–æ–≤
    print("  üìù –î–æ–±–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–∞–π—Ç—ã...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∞–π—Ç–æ–≤
    test_sites = [
        ("https://google.com", "Google", 12345),
        ("https://yandex.ru", "Yandex", 12345),
        ("https://github.com", "GitHub", 67890)
    ]
    
    for url, name, user_id in test_sites:
        success = db.add_site(url, name, user_id)
        print(f"    {'‚úÖ' if success else '‚ùå'} {name}: {url}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∞–π—Ç–æ–≤
    print("\n  üìã –ü–æ–ª—É—á–∞—é –≤—Å–µ —Å–∞–π—Ç—ã...")
    all_sites = db.get_all_sites()
    print(f"    –í—Å–µ–≥–æ —Å–∞–π—Ç–æ–≤: {len(all_sites)}")
    
    for site in all_sites:
        print(f"    ID: {site['id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {site['name']}, URL: {site['url']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–∞–π—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n  üë§ –ü–æ–ª—É—á–∞—é —Å–∞–π—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 12345...")
    user_sites = db.get_sites_by_user(12345)
    print(f"    –°–∞–π—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {len(user_sites)}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
    print("\n  üîÑ –û–±–Ω–æ–≤–ª—è—é —Å—Ç–∞—Ç—É—Å —Å–∞–π—Ç–∞...")
    if all_sites:
        first_site = all_sites[0]
        db.update_site_status(first_site['id'], 'ok', 'test_hash_123')
        print(f"    –°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è: {first_site['name']}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞
    print("\n  üóëÔ∏è –£–¥–∞–ª—è—é —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∞–π—Ç...")
    if len(all_sites) > 1:
        site_to_remove = all_sites[1]
        success = db.remove_site(site_to_remove['id'])
        print(f"    {'‚úÖ' if success else '‚ùå'} –£–¥–∞–ª–µ–Ω: {site_to_remove['name']}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")
    return db

def test_monitor(database):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ —Å–∞–π—Ç–æ–≤"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ —Å–∞–π—Ç–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–Ω–∏—Ç–æ—Ä–∞
    monitor = SiteMonitor(database)
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Å–∞–π—Ç—ã
    active_sites = database.get_active_sites()
    
    if not active_sites:
        print("  ‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    print(f"  üîç –¢–µ—Å—Ç–∏—Ä—É—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ {len(active_sites)} —Å–∞–π—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –æ–¥–Ω–æ–≥–æ —Å–∞–π—Ç–∞
    test_site = active_sites[0]
    print(f"    –ü—Ä–æ–≤–µ—Ä—è—é: {test_site['name']} ({test_site['url']})")
    
    try:
        status, message, content_hash = monitor.check_site(test_site)
        print(f"      –°—Ç–∞—Ç—É—Å: {status}")
        print(f"      –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"      –•–µ—à: {content_hash[:20] if content_hash else 'None'}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Å–∞–π—Ç—É
        summary = monitor.get_site_summary(test_site)
        print(f"      –°–≤–æ–¥–∫–∞:\n{summary}")
        
    except Exception as e:
        print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {str(e)}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ\n")

def test_config():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        import config
        print(f"  ‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {config.CHECK_INTERVAL_HOURS} —á–∞—Å–æ–≤")
        print(f"  ‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞: {config.REQUEST_TIMEOUT} —Å–µ–∫—É–Ω–¥")
        print(f"  üìè –ú–∏–Ω. –¥–ª–∏–Ω–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {config.MIN_CONTENT_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"  üîê –ê–ª–≥–æ—Ä–∏—Ç–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è: {config.CONTENT_HASH_ALGORITHM}")
        print(f"  üìÅ –§–∞–π–ª –ë–î: {config.SITES_DATABASE_FILE}")
        print(f"  üìù –§–∞–π–ª –ª–æ–≥–æ–≤: {config.LOG_FILE}")
        
        if config.TELEGRAM_BOT_TOKEN:
            print(f"  ü§ñ –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {'*' * 20}...")
        else:
            print("  ‚ö†Ô∏è –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\n")
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {str(e)}\n")

def cleanup_test_files():
    """–û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    import os
    
    test_files = ["test_sites.json"]
    
    for file in test_files:
        if os.path.exists(file):
            os.remove(file)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: {file}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤")
    print("=" * 60)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        test_config()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        db = test_database()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–Ω–∏—Ç–æ—Ä
        test_monitor(db)
        
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        
    finally:
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã
        print("\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤...")
        cleanup_test_files()
        print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()


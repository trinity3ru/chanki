"""
Telegram –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º —Å–∞–π—Ç–æ–≤
–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∞–π—Ç–æ–≤
"""
import logging
import base64
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from typing import Dict, List
import config
from database import SitesDatabase
from site_monitor import SiteMonitor

class SiteMonitorBot:
    """
    Telegram –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º —Å–∞–π—Ç–æ–≤
    """
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        self.database = SitesDatabase()
        self.monitor = SiteMonitor(self.database)
        self.application = None
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        logging.basicConfig(
            format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
            level=logging.INFO
        )
        self.logger = logging.getLogger(__name__)
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        user_id = update.effective_user.id
        username = update.effective_user.username or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        welcome_text = f"üëã –ü—Ä–∏–≤–µ—Ç, {username}!\n\n"
        welcome_text += "ü§ñ –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤.\n"
        welcome_text += "–Ø –±—É–¥—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤.\n\n"
        welcome_text += "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        welcome_text += "/add - –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        welcome_text += "/list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–∞–π—Ç—ã\n"
        welcome_text += "/remove - –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç\n"
        welcome_text += "/status - –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤\n"
        welcome_text += "/check - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ–π—á–∞—Å\n"
        welcome_text += "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n\n"
        welcome_text += "üí° –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /add"
        
        await update.message.reply_text(welcome_text)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        help_text = "üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n"
        help_text += "üîó /add - –î–æ–±–∞–≤–∏—Ç—å —Å–∞–π—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        help_text += "   –ü—Ä–∏–º–µ—Ä: /add https://example.com –ù–∞–∑–≤–∞–Ω–∏–µ —Å–∞–π—Ç–∞\n\n"
        help_text += "üìã /list - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–∞–π—Ç—ã\n\n"
        help_text += "üóëÔ∏è /remove - –£–¥–∞–ª–∏—Ç—å —Å–∞–π—Ç –ø–æ ID\n"
        help_text += "   –ü—Ä–∏–º–µ—Ä: /remove 1\n\n"
        help_text += "üìä /status - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤\n\n"
        help_text += "üîç /check - –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤ —Å–µ–π—á–∞—Å\n\n"
        help_text += "‚ùì /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        help_text += "üí° –°–∞–π—Ç—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤"
        
        await update.message.reply_text(help_text)
    
    async def add_site(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /add –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        user_id = update.effective_user.id
        
        if not context.args:
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã!\n\n"
                "üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /add <URL> [–Ω–∞–∑–≤–∞–Ω–∏–µ]\n"
                "üí° –ü—Ä–∏–º–µ—Ä: /add https://example.com –ú–æ–π —Å–∞–π—Ç"
            )
            return
        
        url = context.args[0]
        name = ' '.join(context.args[1:]) if len(context.args) > 1 else url
        
        # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è URL
        if not url.startswith(('http://', 'https://')):
            url = 'https://' + url
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        checking_msg = await update.message.reply_text(
            f"üîç –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞...\n"
            f"üåê {name}\n"
            f"üîó {url}\n\n"
            f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."
        )
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞ –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º
            is_available, availability_message, content = self.monitor.check_site_availability(url)
            
            if not is_available:
                # –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω - –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
                await checking_msg.edit_text(
                    f"‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!\n\n"
                    f"üåê –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                    f"üîó URL: {url}\n\n"
                    f"üö® –û—à–∏–±–∫–∞: {availability_message}\n\n"
                    f"üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ URL –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
                )
                return
            
            # –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –¥–∞–µ–º –≤—ã–±–æ—Ä
            if "‚ö†Ô∏è –ú–∞–ª–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞" in availability_message:
                # –ú–∞–ª–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –¥–∞–µ–º –≤—ã–±–æ—Ä
                content_preview = content[:200] + "..." if len(content) > 200 else content
                
                message_text = (
                    f"‚ö†Ô∏è –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ–±–æ–ª—å—à–æ–π!\n\n"
                    f"üåê –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                    f"üîó URL: {url}\n\n"
                    f"üìù –ö–æ–Ω—Ç–µ–Ω—Ç ({len(content)} —Å–∏–º–≤–æ–ª–æ–≤):\n"
                    f"\"{content_preview}\"\n\n"
                    f"üí° –•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ—Ç —Å–∞–π—Ç?\n"
                    f"‚Ä¢ –î–∞ - —Å–∞–π—Ç –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è\n"
                    f"‚Ä¢ –ù–µ—Ç - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π URL"
                )
                
                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
                url_encoded = base64.b64encode(url.encode()).decode()
                name_encoded = base64.b64encode(name.encode()).decode()
                keyboard = [
                    [
                        InlineKeyboardButton("‚úÖ –î–∞, –¥–æ–±–∞–≤–∏—Ç—å", callback_data=f"add_confirm_{url_encoded}_{name_encoded}"),
                        InlineKeyboardButton("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∏—Ç—å", callback_data="add_cancel")
                    ]
                ]
                reply_markup = InlineKeyboardMarkup(keyboard)
                
                await checking_msg.edit_text(message_text, reply_markup=reply_markup)
                return
            
            # –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º - –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ä–∞–∑—É
            success = self.database.add_site(url, name, user_id)
            
            if success:
                await checking_msg.edit_text(
                    f"‚úÖ –°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                    f"üåê –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                    f"üîó URL: {url}\n\n"
                    f"‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: {availability_message}\n\n"
                    f"üìä –°–∞–π—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤"
                )
            else:
                await checking_msg.edit_text(
                    f"‚ùå –û—à–∏–±–∫–∞! –°–∞–π—Ç {url} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
                    f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /list —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–∞–π—Ç—ã"
                )
                
        except Exception as e:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
            await checking_msg.edit_text(
                f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–∞–π—Ç–∞!\n\n"
                f"üåê –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                f"üîó URL: {url}\n\n"
                f"üö® –û—à–∏–±–∫–∞: {str(e)}\n\n"
                f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ URL"
            )
    
    async def list_sites(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /list –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ —Å–∞–π—Ç–æ–≤
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        user_id = update.effective_user.id
        user_sites = self.database.get_sites_by_user(user_id)
        
        if not user_sites:
            await update.message.reply_text(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤.\n\n"
                "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /add —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Å–∞–π—Ç!"
            )
            return
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Å–∞–π—Ç—ã –ø–æ —Å—Ç–∞—Ç—É—Å—É
        sites_by_status = {'ok': [], 'error': [], 'changed': [], 'unknown': []}
        
        for site in user_sites:
            status = site.get('last_status', 'unknown')
            if status in sites_by_status:
                sites_by_status[status].append(site)
            else:
                sites_by_status['unknown'].append(site)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = f"üìã –í–∞—à–∏ —Å–∞–π—Ç—ã ({len(user_sites)}):\n\n"
        
        for status, sites in sites_by_status.items():
            if sites:
                status_emoji = {
                    'ok': '‚úÖ',
                    'error': '‚ùå',
                    'changed': 'üîÑ',
                    'unknown': '‚ùì'
                }
                status_name = {
                    'ok': '–†–∞–±–æ—Ç–∞—é—Ç',
                    'error': '–û—à–∏–±–∫–∏',
                    'changed': '–ò–∑–º–µ–Ω–µ–Ω–∏—è',
                    'unknown': '–ù–µ –ø—Ä–æ–≤–µ—Ä—è–ª–∏—Å—å'
                }
                
                message += f"{status_emoji[status]} {status_name[status]}:\n"
                
                for site in sites:
                    message += f"  {site['id']}. {site['name']}\n"
                    message += f"     {site['url']}\n"
                
                message += "\n"
        
        message += "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /status –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if len(message) > 4096:
            parts = [message[i:i+4096] for i in range(0, len(message), 4096)]
            for i, part in enumerate(parts):
                await update.message.reply_text(f"{part}\n\n–ß–∞—Å—Ç—å {i+1}/{len(parts)}")
        else:
            await update.message.reply_text(message)
    
    async def remove_site(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /remove –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–∞–π—Ç–∞
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        user_id = update.effective_user.id
        
        if not context.args:
            await update.message.reply_text(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã!\n\n"
                "üìù –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /remove <ID –∏–ª–∏ URL>\n"
                "üí° –ü—Ä–∏–º–µ—Ä—ã:\n"
                "  /remove 1\n"
                "  /remove promineral.ru\n"
                "  /remove https://example.com\n\n"
                "üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /list —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤–∞—à–∏ —Å–∞–π—Ç—ã"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç (–º–æ–∂–µ—Ç –±—ã—Ç—å ID –∏–ª–∏ URL)
        arg = context.args[0]
        site = None
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∫–∞–∫ ID
        try:
            site_id = int(arg)
            site = self.database.get_site_by_id(site_id)
            if site and site.get('user_id') != user_id:
                site = None  # –°–∞–π—Ç –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        except ValueError:
            # –ï—Å–ª–∏ –Ω–µ —á–∏—Å–ª–æ, –∏—â–µ–º –ø–æ URL
            user_sites = self.database.get_sites_by_user(user_id)
            for s in user_sites:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ URL –∏–ª–∏ –¥–æ–º–µ–Ω–∞
                if (s['url'] == arg or 
                    s['url'] == f"https://{arg}" or 
                    s['url'] == f"http://{arg}" or
                    s['name'] == arg):
                    site = s
                    break
        
        if not site:
            await update.message.reply_text(
                f"‚ùå –°–∞–π—Ç '{arg}' –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤–∞–º!\n\n"
                "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
                "  ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å ID –∏–ª–∏ URL\n"
                "  ‚Ä¢ –ß—Ç–æ —Å–∞–π—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤–∞–º–∏\n"
                "  ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /list –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤"
            )
            return
        
        # –£–¥–∞–ª—è–µ–º —Å–∞–π—Ç
        success = self.database.remove_site(site['id'])
        
        if success:
            await update.message.reply_text(
                f"‚úÖ –°–∞–π—Ç '{site['name']}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!"
            )
        else:
            await update.message.reply_text(
                f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞ '{site['name']}'"
            )
    
    async def status_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–∞–π—Ç–æ–≤
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        user_id = update.effective_user.id
        user_sites = self.database.get_sites_by_user(user_id)
        
        if not user_sites:
            await update.message.reply_text(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤.\n\n"
                "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /add —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—ã–π —Å–∞–π—Ç!"
            )
            return
        
        message = f"üìä –°—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤ ({len(user_sites)}):\n\n"
        
        for site in user_sites:
            message += self.monitor.get_site_summary(site)
            message += "\n" + "‚îÄ" * 40 + "\n\n"
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if len(message) > 4096:
            parts = [message[i:i+4096] for i in range(0, len(message), 4096)]
            for i, part in enumerate(parts):
                await update.message.reply_text(f"{part}\n\n–ß–∞—Å—Ç—å {i+1}/{len(parts)}")
        else:
            await update.message.reply_text(message)
    
    async def check_now(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /check –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ–π—á–∞—Å
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        user_id = update.effective_user.id
        user_sites = self.database.get_sites_by_user(user_id)
        
        if not user_sites:
            await update.message.reply_text(
                "üì≠ –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏."
            )
            return
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        await update.message.reply_text("üîç –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤–∞—à–∏—Ö —Å–∞–π—Ç–æ–≤...")
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–π—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            results = {'ok': [], 'error': [], 'changed': []}
            
            for site in user_sites:
                if site.get('is_active', True):
                    status, message, content_hash = self.monitor.check_site(site)
                    results[status].append({
                        'site': site,
                        'message': message,
                        'content_hash': content_hash
                    })
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            report = f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ ({len(user_sites)} —Å–∞–π—Ç–æ–≤):\n\n"
            report += f"‚úÖ –†–∞–±–æ—Ç–∞—é—Ç: {len(results['ok'])}\n"
            report += f"‚ùå –û—à–∏–±–∫–∏: {len(results['error'])}\n"
            report += f"üîÑ –ò–∑–º–µ–Ω–µ–Ω–∏—è: {len(results['changed'])}\n\n"
            
            if results['error']:
                report += "‚ùå –°–∞–π—Ç—ã —Å –æ—à–∏–±–∫–∞–º–∏:\n"
                for result in results['error']:
                    report += f"  ‚Ä¢ {result['site']['name']}: {result['message']}\n"
                report += "\n"
            
            if results['changed']:
                report += "üîÑ –°–∞–π—Ç—ã —Å –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏:\n"
                for result in results['changed']:
                    report += f"  ‚Ä¢ {result['site']['name']}: {result['message']}\n"
                report += "\n"
            
            await update.message.reply_text(report)
            
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {str(e)}")
    
    async def button_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
        
        Args:
            update (Update): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        query = update.callback_query
        await query.answer()
        
        user_id = update.effective_user.id
        data = query.data
        
        if data == "add_cancel":
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–º–µ–Ω–∏–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
            await query.edit_message_text("‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
            return
        
        if data.startswith("add_confirm_"):
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∞–π—Ç–∞ —Å –º–∞–ª—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
            try:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏ –∏–º—è –∏–∑ callback_data
                parts = data.split("_", 2)
                if len(parts) >= 3:
                    url_encoded = parts[2]
                    name_encoded = parts[3] if len(parts) > 3 else url_encoded
                    
                    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º URL –∏ –∏–º—è
                    url = base64.b64decode(url_encoded.encode()).decode()
                    name = base64.b64decode(name_encoded.encode()).decode()
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–π—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                    success = self.database.add_site(url, name, user_id)
                    
                    if success:
                        await query.edit_message_text(
                            f"‚úÖ –°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!\n\n"
                            f"üåê –ù–∞–∑–≤–∞–Ω–∏–µ: {name}\n"
                            f"üîó URL: {url}\n\n"
                            f"‚ö†Ô∏è –°–∞–π—Ç –¥–æ–±–∞–≤–ª–µ–Ω —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ –º–∞–ª–æ–º –∫–æ–Ω—Ç–µ–Ω—Ç–µ\n\n"
                            f"üìä –°–∞–π—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤"
                        )
                    else:
                        await query.edit_message_text(
                            f"‚ùå –û—à–∏–±–∫–∞! –°–∞–π—Ç {url} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
                            f"üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /list —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–∞–π—Ç—ã"
                        )
                else:
                    await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")
            except Exception as e:
                await query.edit_message_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–∞–π—Ç–∞: {str(e)}")
    
    async def error_handler(self, update: object, context: ContextTypes.DEFAULT_TYPE):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
        
        Args:
            update (object): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram
            context (ContextTypes.DEFAULT_TYPE): –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        self.logger.error(f"Exception while handling an update: {context.error}")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        self.application = Application.builder().token(config.TELEGRAM_BOT_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("add", self.add_site))
        self.application.add_handler(CommandHandler("list", self.list_sites))
        self.application.add_handler(CommandHandler("remove", self.remove_site))
        self.application.add_handler(CommandHandler("status", self.status_command))
        self.application.add_handler(CommandHandler("check", self.check_now))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
        self.application.add_handler(CallbackQueryHandler(self.button_callback))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        self.application.add_error_handler(self.error_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        self.logger.info("–ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
        self.application.run_polling()
